name: pipeline production | Main

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Run Tests
        run: dotnet test --configuration Release
  
  generate-version:
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Github Tag Bump
        id: tab_bump
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: patch
    
    outputs:
      new_version: ${{ steps.tab_bump.outputs.new_tag }}
  
  package-and-publish-lib:
    runs-on: ubuntu-latest
    needs: generate-version
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Copy LICENSE
        run: cp LICENSE src/E7.EasyResult/

      - name: Copy README.md
        run: cp README.md src/E7.EasyResult/

      - name: Verify README.md Encoding
        run: |
          file -i src/E7.EasyResult/README.md
          if [ "$(file -i src/E7.EasyResult/README.md | grep -o 'charset=utf-8')" != "charset=utf-8" ]; then
            echo "Converting README.md to UTF-8"
            iconv -f utf-16le -t utf-8 src/E7.EasyResult/README.md -o src/E7.EasyResult/README.md
          fi

      - name: List Files in src/E7.EasyResult
        run: ls -la src/E7.EasyResult/

      - name: Generate NuGet Package
        run: |
          dotnet pack src/E7.EasyResult/ \
          --configuration Release \
          -p:PackageVersion=${{ needs.generate-version.outputs.new_version }} \
          -p:RepositoryUrl=https://github.com/silviobassi/E7.EasyResult \
          -o packages

      - name: Publish NuGet Package
        run: dotnet nuget push packages/*.nupkg --api-key ${{ secrets.PUSH_NUGET }} --source https://api.nuget.org/v3/index.json




